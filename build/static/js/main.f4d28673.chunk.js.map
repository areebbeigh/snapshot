{"version":3,"sources":["animate/index.js","helpers/validator.js","components/Result.js","services/CaptureService.js","services/api.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","animateCSS","element","animationName","callback","node","document","querySelector","classList","add","addEventListener","handleAnimationEnd","remove","removeEventListener","isValidUrl","url","isValid","_i","_patterns","length","p","re","RegExp","exec","console","log","components_Result","_ref","img","loading","error","react_default","a","createElement","className","id","class","src","alt","CaptureService","postUrl","axios","create","baseURL","withCredentials","get","params","Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","debounce","event","setState","target","value","state","newProps","newState","capturePost","_context","t0","response","data","res","_this2","onChange","e","persist","placeholder","React","Component","repo","github","App","src_components_Form","href","data-icon","data-size","data-show-count","aria-label","concat","style","padding","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAAAA,EAAOC,QAAU,CACfC,WADe,SACJC,EAASC,EAAeC,GACjC,IAAMC,EAAOC,SAASC,cAAcL,GACpCG,EAAKG,UAAUC,IAAI,WAAYN,GAS/BE,EAAKK,iBAAiB,eAPtB,SAASC,IACLN,EAAKG,UAAUI,OAAO,WAAYT,GAClCE,EAAKQ,oBAAoB,eAAgBF,GAEjB,oBAAbP,GAAyBA,0BCT5CL,EAAOC,QAAU,CACfc,WADe,SACJC,GAUT,IARA,IAMIC,GAAU,EAEdC,EAAA,EAAAC,EARiB,CACf,sEACA,kEACA,uEAKFD,EAAAC,EAAAC,OAAAF,IAA0B,CAArB,IAAMG,EAACF,EAAAD,GACNI,EAAK,IAAIC,OAAOF,GAChBC,EAAGE,KAAKR,KACVC,GAAU,EACVQ,QAAQC,IAAIL,EAAGC,EAAIN,IAIvB,OADAS,QAAQC,IAAIV,EAAKC,GACVA,mRCfIU,SAAA,SAAAC,GAA2B,IAAzBC,EAAyBD,EAAzBC,IAAKC,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,MAC7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXJ,EACEC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAASJ,GACxBD,IAAYD,EACVG,EAAAC,EAAAC,cAAA,QAAME,GAAG,UAAUC,MAAM,2BAAzB,OACAL,EAAAC,EAAAC,cAAA,OAAKE,GAAG,SAASE,IAAKT,EAAKU,IAAI,yBCV1BC,EAAA,SACDC,GACV,OCDKC,IAAMC,OAAO,CAClBC,QAAS,OACTC,iBAAiB,IDDJC,IAAI,UAAW,CAC1BC,OAAQ,CACN/B,IAAKyB,sBEuEEO,qBAlEb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAwCRQ,aAAeC,mBAAS,SAAUC,GAChCN,KAAKO,SAAS,CAACnB,QAASkB,EAAME,OAAOC,SACpC,KAzCDZ,EAAKa,MAAQ,CACXlC,IAAK,KACLY,QAAS,KACTX,SAAS,EACTC,MAAO,MANQmB,2HAUOc,EAAUC,4EAC9BZ,KAAKU,MAAMtB,UAAYwB,EAASxB,UAAWwB,EAASxB,qCAEpDY,KAAKO,SAAS,CAAC7B,MAAO,OACtBsB,KAAKO,SAAS,CAAC/B,IAAK,QAEhBd,qBAAWkD,EAASxB,iCACtBY,KAAKO,SAAS,CAAC9B,SAAS,aAENuB,KAAKa,YAAYD,EAASxB,gBAAtCZ,SACNwB,KAAKO,SAAS,CAAC/B,QACf3B,qBAAW,UAAW,UAEtBmD,KAAKO,SAAS,CAAC9B,SAAS,4BAExBuB,KAAKO,SAAS,CAAC7B,MAAO,oBACtB7B,qBAAW,OAAQ,mEAGrBuB,QAAQM,MAARoC,EAAAC,IACAf,KAAKO,SAAS,CAAC7B,MAAOoC,EAAAC,GAAIC,SAASC,KAAKvC,mMAK5Bf,yFACEwB,EAA2BxB,iBAAvCuD,SACN9C,QAAQC,IAAI,MAAO6C,qBACZA,EAAID,KAAKzC,oIAOT,IAAA2C,EAAAnB,KACP,OACErB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,SAAOuC,SACL,SAAAC,GACEA,EAAEC,UACFH,EAAKf,aAAaiB,IAGpBtC,GAAG,MAAMwC,YAAY,2BAEzB5C,EAAAC,EAAAC,cAACP,EAAD,CACEI,MAAOsB,KAAKU,MAAMhC,MAClBF,IAAKwB,KAAKU,MAAMlC,IAChBC,QAASuB,KAAKU,MAAMjC,kBA7DX+C,IAAMC,YCLnBC,SAAO,uBACPC,EAAS,sBAqBAC,mLAjBX,OACEjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,aAEFH,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgD,KAAMH,EAASD,EAAMK,YAAU,eAAeC,YAAU,QAAQC,kBAAgB,OAC3GC,aAAA,QAAAC,OAAoBT,EAApB,eADF,QADF,IAEmD/C,EAAAC,EAAAC,cAAA,QAAMuD,MAAO,CAACC,QAAS,SACxE1D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgD,KAAMH,EAASD,EAAMK,YAAU,sBAAsBC,YAAU,QAAQC,kBAAgB,OAClHC,aAAA,QAAAC,OAAoBT,EAApB,eADF,iBAXQF,IAAMC,WCIJa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAAS3F,SAAS4F,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f4d28673.chunk.js","sourcesContent":["module.exports = {\n  animateCSS(element, animationName, callback) {\n    const node = document.querySelector(element)\n    node.classList.add('animated', animationName)\n  \n    function handleAnimationEnd() {\n        node.classList.remove('animated', animationName)\n        node.removeEventListener('animationend', handleAnimationEnd)\n  \n        if (typeof callback === 'function') callback()\n    }\n  \n    node.addEventListener('animationend', handleAnimationEnd)\n  }\n}\n\n","module.exports = {\n  isValidUrl(url) {\n    // return true\n    const patterns = [\n      /^(http:\\/\\/|https:\\/\\/)*(www\\.)*(facebook)\\.com(\\/.+\\/posts\\/\\d+)$/i,\n      /^(http:\\/\\/|https:\\/\\/)*(www\\.)*(instagram)\\.com(\\/p\\/\\w+)\\/?$/i,\n      /^(http:\\/\\/|https:\\/\\/)*(www\\.)*(twitter)\\.com(\\/.+\\/status\\/\\d+)$/i\n    ]\n\n    let isValid = false\n\n    for (const p of patterns) {\n      let re = new RegExp(p)\n      if (re.exec(url)) {\n        isValid = true\n        console.log(p, re, url)\n      }\n    }\n    console.log(url, isValid)\n    return isValid\n  }\n}\n\n","import React from 'react'\n\nimport './Result.css'\n\nexport default ({img, loading, error}) => {\n  return (\n    <div className=\"result\">\n      {\n        error ? \n          <p className=\"error\">{error}</p> :\n        loading && !img ? \n          <span id=\"loading\" class=\"animated flash infinite\">...</span> :\n          <img id=\"resImg\" src={img} alt=\"\"/>\n      }\n    </div>\n  )\n}\n\n","import Api from './api'\n\nexport default {\n  getImageUrl(postUrl) {\n    return Api().get('capture', {\n      params: {\n        url: postUrl\n      }\n    })\n  }\n}\n\n","import axios from 'axios'\n\nexport default () => {\n  return axios.create({\n    baseURL: '/api',\n    withCredentials: true\n  })\n}\n\n","import React from 'react'\nimport { debounce } from 'lodash'\n\nimport Result from './Result'\nimport CaptureService from '../services/CaptureService'\nimport { animateCSS } from '../animate/index'\nimport { isValidUrl } from '../helpers/validator'\n\nimport './Form.css'\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      img: null,\n      postUrl: null,\n      loading: false,\n      error: null\n    }\n  }\n\n  async componentWillUpdate(newProps, newState) {\n    if (this.state.postUrl !== newState.postUrl && newState.postUrl) {\n      try {\n        this.setState({error: null})\n        this.setState({img: null})\n\n        if (isValidUrl(newState.postUrl)) {\n          this.setState({loading: true})\n\n          const img = await this.capturePost(newState.postUrl)\n          this.setState({img})\n          animateCSS('#resImg', 'zoomIn')\n\n          this.setState({loading: false})\n        } else {\n          this.setState({error: 'Unsupported URL'})\n          animateCSS('#url', 'shake')\n        }\n      } catch (err) {\n        console.error(err)\n        this.setState({error: err.response.data.error})\n      }\n    }\n  }\n\n  async capturePost(url) {\n    const res = await CaptureService.getImageUrl(url)\n    console.log('res', res)\n    return res.data.img\n  }\n\n  handleChange = debounce(function (event) {\n    this.setState({postUrl: event.target.value})\n  }, 700)\n\n  render() {\n    return (\n      <div>\n        <div className=\"form\">\n          <input onChange={\n            e => { \n              e.persist()\n              this.handleChange(e) \n            }\n          }\n            id=\"url\" placeholder=\"Post URL goes here...\"/>\n        </div>\n        <Result \n          error={this.state.error}\n          img={this.state.img} \n          loading={this.state.loading}/>\n      </div>\n    )\n  }\n}\n\nexport default Form;\n\n","import React from 'react'\nimport Form from './components/Form'\n\nimport './App.css'\n\nconst repo = 'areebbeigh/snapshot'\nconst github = 'https://github.com/'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App has-text-centered\">\n        <div className=\"header\">\n          <h1 className=\"title is-size-1\">Snapshot</h1>\n        </div>\n        <Form/>\n        <div className=\"footer\">\n          <a className=\"github-button\" href={github + repo} data-icon=\"octicon-star\" data-size=\"large\" data-show-count=\"true\" \n            aria-label={`Star ${repo} on GitHub`}>Star</a> <span style={{padding: '5px'}}></span>\n          <a className=\"github-button\" href={github + repo} data-icon=\"octicon-repo-forked\" data-size=\"large\" data-show-count=\"true\" \n            aria-label={`Star ${repo} on GitHub`}>Fork</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}